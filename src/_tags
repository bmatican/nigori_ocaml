# OASIS_START
# DO NOT EDIT (digest: f48b8d099364f33dc5e94590cd0b671f)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library crypto
"common/crypto/crypto.cmxs": use_crypto
<common/crypto/*.ml{,i}>: pkg_cryptokit
<common/crypto/*.ml{,i}>: pkg_gmp
# Library common
"common/common.cmxs": use_common
<common/*.ml{,i}>: use_crypto
<common/*.ml{,i}>: pkg_cohttp
<common/*.ml{,i}>: pkg_atdgen
<common/*.ml{,i}>: pkg_yojson
<common/*.ml{,i}>: pkg_cryptokit
<common/*.ml{,i}>: pkg_gmp
# Library client
"client/client.cmxs": use_client
<client/*.ml{,i}>: use_common
<client/*.ml{,i}>: use_crypto
<client/*.ml{,i}>: pkg_lwt.unix
<client/*.ml{,i}>: pkg_lwt
<client/*.ml{,i}>: pkg_lwt.syntax
<client/*.ml{,i}>: pkg_cohttp
<client/*.ml{,i}>: pkg_cohttp.lwt
<client/*.ml{,i}>: pkg_atdgen
<client/*.ml{,i}>: pkg_yojson
<client/*.ml{,i}>: pkg_cryptokit
<client/*.ml{,i}>: pkg_gmp
# Library server
"server/server.cmxs": use_server
<server/*.ml{,i}>: use_common
<server/*.ml{,i}>: use_crypto
<server/*.ml{,i}>: pkg_lwt.unix
<server/*.ml{,i}>: pkg_lwt
<server/*.ml{,i}>: pkg_lwt.syntax
<server/*.ml{,i}>: pkg_cohttp
<server/*.ml{,i}>: pkg_cohttp.lwt
<server/*.ml{,i}>: pkg_atdgen
<server/*.ml{,i}>: pkg_yojson
<server/*.ml{,i}>: pkg_cryptokit
<server/*.ml{,i}>: pkg_gmp
# Library test
"test/test.cmxs": use_test
# Executable nigori_server
"nigori_server.byte": use_server
"nigori_server.byte": use_common
"nigori_server.byte": use_crypto
"nigori_server.byte": pkg_lwt.unix
"nigori_server.byte": pkg_lwt
"nigori_server.byte": pkg_lwt.syntax
"nigori_server.byte": pkg_cohttp
"nigori_server.byte": pkg_cohttp.lwt
"nigori_server.byte": pkg_atdgen
"nigori_server.byte": pkg_yojson
"nigori_server.byte": pkg_cryptokit
"nigori_server.byte": pkg_gmp
<*.ml{,i}>: use_server
# Executable nigori_client
"nigori_client.byte": use_client
"nigori_client.byte": use_common
"nigori_client.byte": use_crypto
"nigori_client.byte": pkg_lwt.unix
"nigori_client.byte": pkg_lwt
"nigori_client.byte": pkg_lwt.syntax
"nigori_client.byte": pkg_cohttp
"nigori_client.byte": pkg_cohttp.lwt
"nigori_client.byte": pkg_atdgen
"nigori_client.byte": pkg_yojson
"nigori_client.byte": pkg_cryptokit
"nigori_client.byte": pkg_gmp
<*.ml{,i}>: use_client
<*.ml{,i}>: use_common
<*.ml{,i}>: use_crypto
<*.ml{,i}>: pkg_lwt.unix
<*.ml{,i}>: pkg_lwt
<*.ml{,i}>: pkg_lwt.syntax
<*.ml{,i}>: pkg_cohttp
<*.ml{,i}>: pkg_cohttp.lwt
<*.ml{,i}>: pkg_atdgen
<*.ml{,i}>: pkg_yojson
<*.ml{,i}>: pkg_cryptokit
<*.ml{,i}>: pkg_gmp
# Executable test_primitives
"test/test_primitives.byte": use_test
"test/test_primitives.byte": use_common
"test/test_primitives.byte": use_crypto
"test/test_primitives.byte": pkg_oUnit
"test/test_primitives.byte": pkg_cohttp
"test/test_primitives.byte": pkg_atdgen
"test/test_primitives.byte": pkg_yojson
"test/test_primitives.byte": pkg_cryptokit
"test/test_primitives.byte": pkg_gmp
# Executable test_utils
"test/test_utils.byte": use_test
"test/test_utils.byte": use_common
"test/test_utils.byte": use_crypto
"test/test_utils.byte": pkg_oUnit
"test/test_utils.byte": pkg_cohttp
"test/test_utils.byte": pkg_atdgen
"test/test_utils.byte": pkg_yojson
"test/test_utils.byte": pkg_cryptokit
"test/test_utils.byte": pkg_gmp
<test/*.ml{,i}>: use_test
<test/*.ml{,i}>: use_common
<test/*.ml{,i}>: use_crypto
<test/*.ml{,i}>: pkg_oUnit
<test/*.ml{,i}>: pkg_cohttp
<test/*.ml{,i}>: pkg_atdgen
<test/*.ml{,i}>: pkg_yojson
<test/*.ml{,i}>: pkg_cryptokit
<test/*.ml{,i}>: pkg_gmp
# OASIS_STOP
true: syntax_camlp4o, pkg_lwt.syntax
