# OASIS_START
# DO NOT EDIT (digest: 37fef760b0eeae0bb23c271675041ec1)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library lib_crypto
"common/crypto/lib_crypto.cmxs": use_lib_crypto
<common/crypto/*.ml{,i}>: pkg_cryptokit
<common/crypto/*.ml{,i}>: pkg_gmp
# Library lib_common
"common/lib_common.cmxs": use_lib_common
<common/*.ml{,i}>: use_lib_crypto
<common/*.ml{,i}>: pkg_cohttp
<common/*.ml{,i}>: pkg_atdgen
<common/*.ml{,i}>: pkg_yojson
<common/*.ml{,i}>: pkg_cryptokit
<common/*.ml{,i}>: pkg_gmp
# Library lib_client
"client/lib_client.cmxs": use_lib_client
<client/*.ml{,i}>: use_lib_common
<client/*.ml{,i}>: use_lib_crypto
<client/*.ml{,i}>: pkg_lwt.unix
<client/*.ml{,i}>: pkg_lwt
<client/*.ml{,i}>: pkg_lwt.syntax
<client/*.ml{,i}>: pkg_cohttp
<client/*.ml{,i}>: pkg_cohttp.lwt
<client/*.ml{,i}>: pkg_atdgen
<client/*.ml{,i}>: pkg_yojson
<client/*.ml{,i}>: pkg_cryptokit
<client/*.ml{,i}>: pkg_gmp
# Library lib_server
"server/lib_server.cmxs": use_lib_server
<server/*.ml{,i}>: use_lib_common
<server/*.ml{,i}>: use_lib_crypto
<server/*.ml{,i}>: pkg_lwt.unix
<server/*.ml{,i}>: pkg_lwt
<server/*.ml{,i}>: pkg_lwt.syntax
<server/*.ml{,i}>: pkg_cohttp
<server/*.ml{,i}>: pkg_cohttp.lwt
<server/*.ml{,i}>: pkg_dyntype
<server/*.ml{,i}>: pkg_sqlite3
<server/*.ml{,i}>: pkg_orm
<server/*.ml{,i}>: pkg_orm.syntax
<server/*.ml{,i}>: pkg_atdgen
<server/*.ml{,i}>: pkg_yojson
<server/*.ml{,i}>: pkg_cryptokit
<server/*.ml{,i}>: pkg_gmp
# Library lib_test
"test/lib_test.cmxs": use_lib_test
# Executable server_nigori
"server_nigori.byte": use_lib_server
"server_nigori.byte": use_lib_common
"server_nigori.byte": use_lib_crypto
"server_nigori.byte": pkg_lwt.unix
"server_nigori.byte": pkg_lwt
"server_nigori.byte": pkg_lwt.syntax
"server_nigori.byte": pkg_cohttp
"server_nigori.byte": pkg_cohttp.lwt
"server_nigori.byte": pkg_dyntype
"server_nigori.byte": pkg_sqlite3
"server_nigori.byte": pkg_orm
"server_nigori.byte": pkg_orm.syntax
"server_nigori.byte": pkg_atdgen
"server_nigori.byte": pkg_yojson
"server_nigori.byte": pkg_cryptokit
"server_nigori.byte": pkg_gmp
<*.ml{,i}>: use_lib_server
<*.ml{,i}>: pkg_dyntype
<*.ml{,i}>: pkg_sqlite3
<*.ml{,i}>: pkg_orm
<*.ml{,i}>: pkg_orm.syntax
# Executable client_nigori
"client_nigori.byte": use_lib_client
"client_nigori.byte": use_lib_common
"client_nigori.byte": use_lib_crypto
"client_nigori.byte": pkg_lwt.unix
"client_nigori.byte": pkg_lwt
"client_nigori.byte": pkg_lwt.syntax
"client_nigori.byte": pkg_cohttp
"client_nigori.byte": pkg_cohttp.lwt
"client_nigori.byte": pkg_atdgen
"client_nigori.byte": pkg_yojson
"client_nigori.byte": pkg_cryptokit
"client_nigori.byte": pkg_gmp
<*.ml{,i}>: use_lib_client
<*.ml{,i}>: use_lib_common
<*.ml{,i}>: use_lib_crypto
<*.ml{,i}>: pkg_lwt.unix
<*.ml{,i}>: pkg_lwt
<*.ml{,i}>: pkg_lwt.syntax
<*.ml{,i}>: pkg_cohttp
<*.ml{,i}>: pkg_cohttp.lwt
<*.ml{,i}>: pkg_atdgen
<*.ml{,i}>: pkg_yojson
<*.ml{,i}>: pkg_cryptokit
<*.ml{,i}>: pkg_gmp
# Executable test_primitives
"test/test_primitives.byte": use_lib_test
"test/test_primitives.byte": use_lib_common
"test/test_primitives.byte": use_lib_crypto
"test/test_primitives.byte": pkg_oUnit
"test/test_primitives.byte": pkg_cohttp
"test/test_primitives.byte": pkg_atdgen
"test/test_primitives.byte": pkg_yojson
"test/test_primitives.byte": pkg_cryptokit
"test/test_primitives.byte": pkg_gmp
# Executable test_utils
"test/test_utils.byte": use_lib_test
"test/test_utils.byte": use_lib_common
"test/test_utils.byte": use_lib_crypto
"test/test_utils.byte": pkg_oUnit
"test/test_utils.byte": pkg_cohttp
"test/test_utils.byte": pkg_atdgen
"test/test_utils.byte": pkg_yojson
"test/test_utils.byte": pkg_cryptokit
"test/test_utils.byte": pkg_gmp
# Executable test_database
"test/test_database.byte": use_lib_test
"test/test_database.byte": use_lib_server
"test/test_database.byte": use_lib_common
"test/test_database.byte": use_lib_crypto
"test/test_database.byte": pkg_oUnit
"test/test_database.byte": pkg_lwt.unix
"test/test_database.byte": pkg_lwt
"test/test_database.byte": pkg_lwt.syntax
"test/test_database.byte": pkg_cohttp
"test/test_database.byte": pkg_cohttp.lwt
"test/test_database.byte": pkg_dyntype
"test/test_database.byte": pkg_sqlite3
"test/test_database.byte": pkg_orm
"test/test_database.byte": pkg_orm.syntax
"test/test_database.byte": pkg_atdgen
"test/test_database.byte": pkg_yojson
"test/test_database.byte": pkg_cryptokit
"test/test_database.byte": pkg_gmp
# Executable test_nonce
"test/test_nonce.byte": use_lib_test
"test/test_nonce.byte": use_lib_server
"test/test_nonce.byte": use_lib_common
"test/test_nonce.byte": use_lib_crypto
"test/test_nonce.byte": pkg_oUnit
"test/test_nonce.byte": pkg_lwt.unix
"test/test_nonce.byte": pkg_lwt
"test/test_nonce.byte": pkg_lwt.syntax
"test/test_nonce.byte": pkg_cohttp
"test/test_nonce.byte": pkg_cohttp.lwt
"test/test_nonce.byte": pkg_dyntype
"test/test_nonce.byte": pkg_sqlite3
"test/test_nonce.byte": pkg_orm
"test/test_nonce.byte": pkg_orm.syntax
"test/test_nonce.byte": pkg_atdgen
"test/test_nonce.byte": pkg_yojson
"test/test_nonce.byte": pkg_cryptokit
"test/test_nonce.byte": pkg_gmp
# Executable test_derivations
"test/test_derivations.byte": use_lib_test
"test/test_derivations.byte": use_lib_common
"test/test_derivations.byte": use_lib_crypto
"test/test_derivations.byte": pkg_oUnit
"test/test_derivations.byte": pkg_cohttp
"test/test_derivations.byte": pkg_atdgen
"test/test_derivations.byte": pkg_yojson
"test/test_derivations.byte": pkg_cryptokit
"test/test_derivations.byte": pkg_gmp
# Executable test_batch
"test/test_batch.byte": use_lib_test
"test/test_batch.byte": use_lib_server
"test/test_batch.byte": use_lib_client
"test/test_batch.byte": use_lib_common
"test/test_batch.byte": use_lib_crypto
"test/test_batch.byte": pkg_oUnit
"test/test_batch.byte": pkg_lwt.unix
"test/test_batch.byte": pkg_lwt
"test/test_batch.byte": pkg_lwt.syntax
"test/test_batch.byte": pkg_cohttp
"test/test_batch.byte": pkg_cohttp.lwt
"test/test_batch.byte": pkg_dyntype
"test/test_batch.byte": pkg_sqlite3
"test/test_batch.byte": pkg_orm
"test/test_batch.byte": pkg_orm.syntax
"test/test_batch.byte": pkg_atdgen
"test/test_batch.byte": pkg_yojson
"test/test_batch.byte": pkg_cryptokit
"test/test_batch.byte": pkg_gmp
<test/*.ml{,i}>: use_lib_test
<test/*.ml{,i}>: use_lib_server
<test/*.ml{,i}>: use_lib_client
<test/*.ml{,i}>: use_lib_common
<test/*.ml{,i}>: use_lib_crypto
<test/*.ml{,i}>: pkg_oUnit
<test/*.ml{,i}>: pkg_lwt.unix
<test/*.ml{,i}>: pkg_lwt
<test/*.ml{,i}>: pkg_lwt.syntax
<test/*.ml{,i}>: pkg_cohttp
<test/*.ml{,i}>: pkg_cohttp.lwt
<test/*.ml{,i}>: pkg_dyntype
<test/*.ml{,i}>: pkg_sqlite3
<test/*.ml{,i}>: pkg_orm
<test/*.ml{,i}>: pkg_orm.syntax
<test/*.ml{,i}>: pkg_atdgen
<test/*.ml{,i}>: pkg_yojson
<test/*.ml{,i}>: pkg_cryptokit
<test/*.ml{,i}>: pkg_gmp
# OASIS_STOP
true: syntax_camlp4o, pkg_lwt.syntax
